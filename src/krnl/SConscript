# vim: syntax=python

Import('env', 'arch', 'buildtype', 'distreq')

sources = []

kernel = env.Clone()

if arch == 'x86':
	sources += [
		'./arch/x86/display.c',
		'./arch/x86/interrupts.c',
		'./arch/x86/port.c',
		'./arch/x86/shutdown.c',
	]
	kernel.Append(LINKFLAGS=['-T', 'src/krnl/arch/x86/link.ld'])

sources += [
	'./boot/loader.asm',
	'./mm/memory.c',
	'./drivers/fdd.c',
	'./drivers/ramdisk.c',
	'./drivers/core/screen.c',
	'./drivers/core/kb.c',
	'./drivers/core/ports.c',
	'./drivers/core/console.c',
	'./lib/readline.c',
	'./lib/string.c',
	'./init/init.c',
	'./init/elfloader.c',
	'./misc/mm.c',
	'./misc/shutdown.c',
	'./misc/stop.c',
	'./misc/debug.c',
	'./misc/message_handler.c',
	'./misc/panic.c',
	'./misc/misc.c',
	'./misc/printk.c',
	'./hal/isrs.c',
	'./hal/syscall.c',
	'./hal/beep.c',
	'./hal/idt.c',
	'./hal/port.c',
	'./hal/timer.c',
	'./hal/descriptor_tables.c',
	'./hal/intro.c',
	'./hal/hal.c',
	'./hal/irq_handler.c',
	'./boot/gdt.asm',
	'./misc/task.asm',
	'./hal/exceptions.asm',
	'./hal/irqs.asm',
	'./hal/loadidt.asm',
	'./core/ipl.c',
]

distreq += ['src/krnl/krnl.exe']

kernel.Program('krnl', sources)
